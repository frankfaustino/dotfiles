" vim-plug
call plug#begin('~/.vim/plugged')
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'mhartington/oceanic-next'
Plug 'gertjanreynaert/cobalt2-vim-theme'
Plug 'othree/yajs.vim'
Plug 'mxw/vim-jsx'
Plug 'suan/vim-instant-markdown'
Plug 'metakirby5/codi.vim'
Plug 'prettier/vim-prettier', {
  \ 'do': 'yarn install',
  \ 'for': ['javascript', 'typescript', 'css', 'less', 'scss', 'json', 'graphql', 'markdown', 'vue'] }
Plug 'yggdroot/indentline'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'eslint/eslint'
Plug 'mattn/emmet-vim'
Plug 'mattn/webapi-vim'
call plug#end()

" Enable syntax highlighting
syntax on

" Detect filetype
filetype on

" Enable loading plugin file for specific file types
filetype plugin on

" Enable loading indent file for specific file types
filetype indent on

" Show matching brackets and parens
set showmatch

" Set character encoding to UTF-8
set encoding=utf-8

" Show 3 lines above or below cursor when scrolling
set scrolloff=3

set termguicolors

" Turn on line numbers
set number

" Show line and column number
set ruler

" Make command line one line high
set ch=1

" Tabs vs Spaces
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

" Color themes
" let g:dracula_italic = 0
" highlight Normal ctermbg=None
colorscheme cobalt2
" ———————————————————————————————————
" let g:oceanic_next_terminal_bold = 1
" let g:oceanic_next_terminal_italic = 1
" color OceanicNext

" Indent line characters
" let g:indentLine_char = '×'
" let g:indentLine_char = '▸'
let g:indentLine_char = '⌜'
" let g:indentLine_char = '▴'
" let g:indentLine_char = '◜'
" let g:indentLine_char = '❘'
" let g:indentLine_char = '⌇'
" let g:indentLine_char = '⌞'

" Prettier
let g:prettier#config#semi = 'false'
let g:prettier#config#single_quote = 'true'
let g:prettier#config#bracket_spacing = 'true'
let g:prettier#config#trailing_comma = 'none'

" NERDCommenter
let g:NERDCustomDelimiters = { 'javascript' : { 'left': '// ', 'leftAlt': '/* ', 'rightAlt': ' */' }}
let g:NERDTrimTrailingWhitespace = 1

" NERDTree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" vim-fugitive
set statusline+=%{exists('g:loaded_fugitive')?fugitive#statusline():''}

" emmet-vim
let g:user_emmet_leader_key='<Tab>'
let g:user_emmet_settings = { 'javascript.jsx' : { 'extends' : 'jsx' }}
let g:user_emmet_settings = webapi#json#decode(join(readfile(expand('~/.vim/snippets.json')), "\n"))
